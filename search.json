[{"path":"https://corymccartan.com/seine/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Cory McCartan Shiro Kuriwaki Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://corymccartan.com/seine/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cory McCartan. Author, maintainer. Shiro Kuriwaki. Author.","code":""},{"path":"https://corymccartan.com/seine/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McCartan C, Kuriwaki S (2025). seine: Semiparametric Ecological Inference. R package version 0.0.0.9000, https://github.com/CoryMcCartan/seine.","code":"@Manual{,   title = {seine: Semiparametric Ecological Inference},   author = {Cory McCartan and Shiro Kuriwaki},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/CoryMcCartan/seine}, }"},{"path":[]},{"path":"https://corymccartan.com/seine/index.html","id":"this-software-is-experimental","dir":"","previous_headings":"","what":"This software is experimental","title":"Semiparametric Ecological Inference","text":"seine underlying statistical methods active development. package currently recommended non-expert use.","code":""},{"path":"https://corymccartan.com/seine/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Semiparametric Ecological Inference","text":"can install development version seine ","code":"remotes::install_github(\"CoryMcCartan/seine\")"},{"path":[]},{"path":"https://corymccartan.com/seine/reference/ei-impl.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-level implementations of ei_ridge() and ei_riesz() — ei_ridge_impl","title":"Low-level implementations of ei_ridge() and ei_riesz() — ei_ridge_impl","text":"checks performed inputs. Use ei_ridge() ei_riesz() strongly recommended unless many regressions must fit, e.g., within tight loop. works single outcome, .e., y must vector, matrix.","code":""},{"path":"https://corymccartan.com/seine/reference/ei-impl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-level implementations of ei_ridge() and ei_riesz() — ei_ridge_impl","text":"","code":"ei_ridge_impl(x, y, z, weights, penalty = NULL)  ei_riesz_impl(x, z, total, weights, penalty)"},{"path":"https://corymccartan.com/seine/reference/ei-impl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low-level implementations of ei_ridge() and ei_riesz() — ei_ridge_impl","text":"x matrix predictors y vector outcomes z matrix covariates weights vector estimation weights penalty ridge penalty (non-negative scalar), must specified ei_riesz_impl() can automatically estimated ei_ridge_impl() providing penalty=NULL. total vector total observations per unit.","code":""},{"path":"https://corymccartan.com/seine/reference/ei-impl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-level implementations of ei_ridge() and ei_riesz() — ei_ridge_impl","text":"list model components.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_bench.html","id":null,"dir":"Reference","previous_headings":"","what":"Benchmark sensitivity parameters from observed covariates — ei_bench","title":"Benchmark sensitivity parameters from observed covariates — ei_bench","text":"Produces table benchmark values c_outcome c_predictor ei_sens() covariate, following methodology Chernozhukov et al. (2022).","code":""},{"path":"https://corymccartan.com/seine/reference/ei_bench.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Benchmark sensitivity parameters from observed covariates — ei_bench","text":"","code":"ei_bench(spec, preproc = NULL)"},{"path":"https://corymccartan.com/seine/reference/ei_bench.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Benchmark sensitivity parameters from observed covariates — ei_bench","text":"spec ei_spec object. preproc optional function takes ei_spec object (spec one covariate removed) returns modified object includes modified object. Useful apply preprocessing, basis transformation, part benchmarking process.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_bench.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Benchmark sensitivity parameters from observed covariates — ei_bench","text":"Chernozhukov, V., Cinelli, C., Newey, W., Sharma, ., & Syrgkanis, V. (2022). Long story short: Omitted variable bias causal machine learning (. w30302). National Bureau Economic Research.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_bench.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Benchmark sensitivity parameters from observed covariates — ei_bench","text":"","code":"data(elec_1968)  spec = ei_spec(elec_1968, vap_white:vap_other, pres_ind_wal,                total = pres_total, covariates = c(educ_elem, pop_urban, farm))  ei_bench(spec) #> # A tibble: 9 × 7 #>   covariate predictor outcome      c_outcome c_predictor confounding est_chg #>   <chr>     <chr>     <chr>            <dbl>       <dbl>       <dbl>   <dbl> #> 1 educ_elem white     pres_ind_wal    0.0859      0.609       0.686   0.0272 #> 2 educ_elem black     pres_ind_wal    0.0859      1          -0.827  -0.148  #> 3 educ_elem other     pres_ind_wal    0.0859      1           0.0880  0.422  #> 4 pop_urban white     pres_ind_wal    0.0680      0.151      -0.940  -0.0195 #> 5 pop_urban black     pres_ind_wal    0.0680      0.104       0.863   0.0578 #> 6 pop_urban other     pres_ind_wal    0.0680      0.0560      0.245   0.322  #> 7 farm      white     pres_ind_wal    0.125       0.275      -0.563  -0.0203 #> 8 farm      black     pres_ind_wal    0.125       0.102       0.420   0.0377 #> 9 farm      other     pres_ind_wal    0.125       0.289       0.471   1.72    # preprocess to add all 2-way interactions ei_bench(spec, preproc = function(s) {     z_cols = match(attr(s, \"ei_z\"), names(s))     s_out = s[-z_cols]     z_new = model.matrix(~ .^2 - 1, data = s[z_cols])     s_out = cbind(s_out, z_new)     ei_spec(s_out, white:other, pres_ind_wal,             total = attr(s, \"ei_n\"), covariates = colnames(z_new)) }) #> Warning: NaNs produced #> # A tibble: 9 × 7 #>   covariate predictor outcome      c_outcome c_predictor confounding est_chg #>   <chr>     <chr>     <chr>            <dbl>       <dbl>       <dbl>   <dbl> #> 1 educ_elem white     pres_ind_wal    0.193        0.797      0.422   0.0308 #> 2 educ_elem black     pres_ind_wal    0.193        1         -0.0493 -0.0187 #> 3 educ_elem other     pres_ind_wal    0.193        0.113     -0.549  -1.22   #> 4 pop_urban white     pres_ind_wal    0.0860       0.143     -0.586  -0.0152 #> 5 pop_urban black     pres_ind_wal    0.0860       0.210      0.526   0.0681 #> 6 pop_urban other     pres_ind_wal    0.0860      -0.345    NaN      -0.359  #> 7 farm      white     pres_ind_wal    0.254        0.700     -0.294  -0.0237 #> 8 farm      black     pres_ind_wal    0.254        0.617      0.486   0.160  #> 9 farm      other     pres_ind_wal    0.254        1          0.162   1.08"},{"path":"https://corymccartan.com/seine/reference/ei_est.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate ecological quantities — ei_est","title":"Estimate ecological quantities — ei_est","text":"Produces estimates overall conditional means fitted ecological inference model Riesz representer. regression model Riesz representer provided, debiased machine learning (DML) estimate produced.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate ecological quantities — ei_est","text":"","code":"ei_est(   regr = NULL,   riesz = NULL,   data,   total,   subset = NULL,   outcome = NULL,   conf_level = FALSE )  # S3 method for class 'ei_est' as.matrix(x, which = \"estimate\", ...)  # S3 method for class 'ei_est' vcov(object, ...)  # S3 method for class 'ei_est' nobs(object, ...)"},{"path":"https://corymccartan.com/seine/reference/ei_est.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate ecological quantities — ei_est","text":"regr fitted regression model, ei_ridge(), another kind regression model wrapped ei_wrap_model(). riesz provided regr ei_riesz() object, riesz set value regr regr set NULL. users can call function ei_est(<riesz>, data = <data>). riesz fitted Riesz representer, ei_riesz(), matrix Riesz weights data data frame, matrix, ei_spec object used fit regression Riesz representer. total <tidy-select> variable containing total number observations aggregate unit. example, column containing total number voters. Required data ei_spec() object riesz provided. subset <data-masking> optional indexing vector describing subset units calculate estimates. outcome <data-masking> vector matrix outcome variables. required riesz provided alone (without regr) data ei_spec object. conf_level numeric specifying level confidence intervals. FALSE (default), confidence intervals calculated. Standard errors always returned. x, object object class ei_est column ei_est convert matrix. example, pass =\"std.error\" return standard errors instead estimates. Partial matching supported. ... Additional arguments (ignored)","code":""},{"path":"https://corymccartan.com/seine/reference/ei_est.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate ecological quantities — ei_est","text":"data frame estimates. class ei_est, supporting several methods, two additional attributes: vcov, containing estimated covariance matrix estimates, n, containing number aggregate units used estimation (number rows data).","code":""},{"path":"https://corymccartan.com/seine/reference/ei_est.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Estimate ecological quantities — ei_est","text":".matrix(ei_est): Format estimates, standard errors, columns matrix. vcov(ei_est): Extract full covariance matrix estimates nobs(ei_est): Extract number units covered estimates","code":""},{"path":"https://corymccartan.com/seine/reference/ei_est.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate ecological quantities — ei_est","text":"","code":"data(elec_1968)  spec = ei_spec(elec_1968, vap_white:vap_other, pres_dem_hum:pres_abs,                total = pres_total, covariates = c(state, pop_urban, farm))  m = ei_ridge(spec) rr = ei_riesz(spec, penalty = m$penalty)  ei_est(regr = m, data = spec, conf_level = 0.95) # Plug-in estimate #> # A tibble: 12 × 6 #>    predictor outcome estimate std.error  conf.low conf.high #>    <chr>     <chr>      <dbl>     <dbl>     <dbl>     <dbl> #>  1 white     dem_hum  0.230    0.0222    0.186      0.273   #>  2 black     dem_hum  0.588    0.0457    0.499      0.678   #>  3 other     dem_hum  1.55     0.181     1.20       1.91    #>  4 white     rep_nix  0.382    0.0284    0.326      0.438   #>  5 black     rep_nix -0.0775   0.0165   -0.110     -0.0452  #>  6 other     rep_nix  0.494    0.0722    0.353      0.636   #>  7 white     ind_wal  0.387    0.0251    0.338      0.436   #>  8 black     ind_wal  0.488    0.0446    0.401      0.576   #>  9 other     ind_wal -1.05     0.131    -1.30      -0.790   #> 10 white     abs      0.00152  0.000251  0.00102    0.00201 #> 11 black     abs      0.00109  0.000227  0.000641   0.00153 #> 12 other     abs      0.00117  0.000471  0.000250   0.00210 ei_est(riesz = rr, data = spec) # Weighted (Riesz) estimate #> # A tibble: 12 × 4 #>    predictor outcome estimate std.error #>    <chr>     <chr>      <dbl>     <dbl> #>  1 white     dem_hum  0.230    0.0224   #>  2 black     dem_hum  0.588    0.0948   #>  3 other     dem_hum  1.55     1.98     #>  4 white     rep_nix  0.382    0.0237   #>  5 black     rep_nix -0.0775   0.0695   #>  6 other     rep_nix  0.494    1.49     #>  7 white     ind_wal  0.387    0.0286   #>  8 black     ind_wal  0.488    0.115    #>  9 other     ind_wal -1.05     1.98     #> 10 white     abs      0.00152  0.000252 #> 11 black     abs      0.00109  0.000840 #> 12 other     abs      0.00117  0.0134   est = ei_est(regr = m, riesz = rr, data = spec) # Double/debiased ML estimate as.matrix(est) #>          outcome #> predictor   dem_hum    rep_nix    ind_wal          abs #>     white 0.2296810  0.3814135  0.3873821 0.0015233731 #>     black 0.5856278 -0.0768011  0.4901049 0.0010683650 #>     other 1.6370000  0.5979725 -1.2351002 0.0001277371 as.matrix(est, \"std.error\") #>          outcome #> predictor    dem_hum    rep_nix    ind_wal          abs #>     white 0.02346882 0.03061363 0.02459608 0.0002801522 #>     black 0.04997948 0.02670867 0.05056769 0.0005101309 #>     other 0.47024050 0.33462988 0.55488723 0.0058597394 vcov(est)[1:4, 1:4] #>               white:dem_hum black:dem_hum other:dem_hum white:rep_nix #> white:dem_hum  0.0005507857  0.0004144159   0.002191216  0.0006103741 #> black:dem_hum  0.0004144159  0.0024979486   0.005601271  0.0007945676 #> other:dem_hum  0.0021912165  0.0056012709   0.221126131  0.0045939440 #> white:rep_nix  0.0006103741  0.0007945676   0.004593944  0.0009371944  est = ei_est(m, rr, data = spec, subset = (state == \"Alabama\")) as.matrix(est) #>          outcome #> predictor     dem_hum     rep_nix    ind_wal         abs #>     white 0.006649839  0.16292434  0.8158650 0.014560791 #>     black 0.733211508 -0.04036185  0.2995285 0.007621831 #>     other 1.803101753  0.16471677 -0.9702721 0.002453595 nobs(est) #> [1] 67"},{"path":"https://corymccartan.com/seine/reference/ei_est_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce local ecological estimates — ei_est_local","title":"Produce local ecological estimates — ei_est_local","text":"Projects predictions fitted regression model onto accounting constraint using provided residual covariance matrix. ensures set local estimates satisfies accounting identity. Local estimates may truncated variable bounds.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_est_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce local ecological estimates — ei_est_local","text":"","code":"ei_est_local(   regr,   data,   r_cov = NULL,   bounds = NULL,   conf_level = FALSE,   unimodal = TRUE )  # S3 method for class 'ei_est_local' as.array(x, ...)"},{"path":"https://corymccartan.com/seine/reference/ei_est_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce local ecological estimates — ei_est_local","text":"regr fitted regression model, ei_ridge(), another kind regression model wrapped ei_wrap_model(). data data frame, matrix, ei_spec object used fit regression. r_cov covariance matrix residuals use projecting local estimates onto accounting constraint, list matrices, one outcome variable. Defaults identity matrix scaled residual variance regr, corresponding orthogonal projection. Set r_cov=1 use degenerate covariance matrix corresponding (local) neighborhood model. multiple outcome variables r_cov matrix, applied identically outcome. bounds vector c(min, max) bounds outcome, local estimates truncated. general, truncation lead violations accounting identity. bounds = NULL, inferred outcome variable: contained within \\([0, 1]\\), instance, bounds c(0, 1). default bounds = FALSE forces unbounded estimates. conf_level numeric specifying level confidence intervals. FALSE (default), confidence intervals calculated. regr arguments ei_wrap_model(), confidence intervals incorporate uncertainty prediction , just residual. trigger warning periodically. unimodal TRUE, assume unimodal residual distribution. Improves width confidence intervals factor 4/9. x object class ei_est_local ... Additional arguments (ignored)","code":""},{"path":"https://corymccartan.com/seine/reference/ei_est_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce local ecological estimates — ei_est_local","text":"data frame estimates. .row column output corresponds observation index input. class ei_est_local, supporting several methods.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_est_local.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produce local ecological estimates — ei_est_local","text":"Local estimates produced independently outcome variable. Truncation bounds, used, general lead estimates satisfy accounting identity.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_est_local.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Produce local ecological estimates — ei_est_local","text":".array(ei_est_local): Format estimates array dimensions <rows>*<predictors>*<outcomes>. work object sorted.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_est_local.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce local ecological estimates — ei_est_local","text":"","code":"if (FALSE) { # \\dontrun{ data(elec_1968)  spec = ei_spec(elec_1968, vap_white:vap_other, pres_dem_hum:pres_abs,                total = pres_total, covariates = c(state, pop_urban, farm))  m = ei_ridge(spec)  ei_est_local(m, spec, conf_level = 0.95) suppressWarnings(ei_est_local(m, spec, bounds=c(0.01, 0.2))) } # }"},{"path":"https://corymccartan.com/seine/reference/ei_proportions.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert counts to proportions — ei_proportions","title":"Convert counts to proportions — ei_proportions","text":"Divides counts specified columns specified total sum, possibly storing result new column. Also checks --bounds missing values, can create column containing remainder amount proportions sum 1.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_proportions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert counts to proportions — ei_proportions","text":"","code":"ei_proportions(data, ..., .total = \".total\", .other = \".other\", clamp = 0.001)"},{"path":"https://corymccartan.com/seine/reference/ei_proportions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert counts to proportions — ei_proportions","text":"data data frame. ... <tidy-select> Columns convert proportions. one column completely missing, imputed 1 minus total. .total <tidy-select> Column use total. column exist, created sum selected columns. Supports renaming syntax. .<tidy-select> Column store remainder, selected columns plus .sum 1. selected columns sum 1 normalization, argument used; otherwise created overwritten. calculation .performed clamping (see ). clamp Proportions clamp 0 1 rounded 0 1, respectively.  Values outside clamp throw error. Set clamp=0 disable clamp=Inf allow --bounds proportions (recommended).","code":""},{"path":"https://corymccartan.com/seine/reference/ei_proportions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert counts to proportions — ei_proportions","text":"modified data frame.  Unselected columns unmodified.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_proportions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert counts to proportions — ei_proportions","text":"","code":"data(elec_1968) # Make a data frame with counts d_unnorm = with(head(elec_1968, 10), data.frame(   vap = vap,   vap_white = vap * vap_white,   vap_black = vap * vap_black,   vap_other = vap * vap_other ))  ei_proportions(d_unnorm, vap_white:vap_black, .total=vap) # `.other` column created #>      vap vap_white  vap_black vap_other       .other #> 1  12744 0.7611425 0.23713120        22 0.0017263026 #> 2  33012 0.8595662 0.13737429       101 0.0030594935 #> 3  12370 0.6104285 0.38876314        10 0.0008084074 #> 4   7575 0.7832343 0.21570957         8 0.0010561056 #> 5  15856 0.9811428 0.01810040        12 0.0007568113 #> 6   6019 0.3912610 0.60873899         0 0.0000000000 #> 7  12341 0.6791184 0.32015234         9 0.0007292764 #> 8  55547 0.8501269 0.14738870       138 0.0024843826 #> 9  21117 0.7267604 0.27252924        15 0.0007103282 #> 10  9215 0.9290288 0.07010309         8 0.0008681498 ei_proportions(d_unnorm, vap_white:vap_other) # no total provided #>      vap vap_white  vap_black    vap_other .total #> 1  12744 0.7611425 0.23713120 0.0017263026  12744 #> 2  33012 0.8595662 0.13737429 0.0030594935  33012 #> 3  12370 0.6104285 0.38876314 0.0008084074  12370 #> 4   7575 0.7832343 0.21570957 0.0010561056   7575 #> 5  15856 0.9811428 0.01810040 0.0007568113  15856 #> 6   6019 0.3912610 0.60873899 0.0000000000   6019 #> 7  12341 0.6791184 0.32015234 0.0007292764  12341 #> 8  55547 0.8501269 0.14738870 0.0024843826  55547 #> 9  21117 0.7267604 0.27252924 0.0007103282  21117 #> 10  9215 0.9290288 0.07010309 0.0008681498   9215 # renaming allowed ei_proportions(d_unnorm, white=vap_white, black=vap_black,                .total=c(total=vap), .other=\"vap_other\") #>    total     white      black    vap_other #> 1  12744 0.7611425 0.23713120 0.0017263026 #> 2  33012 0.8595662 0.13737429 0.0030594935 #> 3  12370 0.6104285 0.38876314 0.0008084074 #> 4   7575 0.7832343 0.21570957 0.0010561056 #> 5  15856 0.9811428 0.01810040 0.0007568113 #> 6   6019 0.3912610 0.60873899 0.0000000000 #> 7  12341 0.6791184 0.32015234 0.0007292764 #> 8  55547 0.8501269 0.14738870 0.0024843826 #> 9  21117 0.7267604 0.27252924 0.0007103282 #> 10  9215 0.9290288 0.07010309 0.0008681498"},{"path":"https://corymccartan.com/seine/reference/ei_ridge.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit an ecological inference regression model — ei_ridge","title":"Fit an ecological inference regression model — ei_ridge","text":"Fits penalized regression model ecological inference, allowing overall unit-level estimates conditional means using ei_est().","code":""},{"path":"https://corymccartan.com/seine/reference/ei_ridge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit an ecological inference regression model — ei_ridge","text":"","code":"ei_ridge(x, ...)  # S3 method for class 'formula' ei_ridge(formula, data, weights, penalty = NULL, scale = TRUE, ...)  # S3 method for class 'ei_spec' ei_ridge(x, weights, penalty = NULL, scale = TRUE, ...)  # S3 method for class 'data.frame' ei_ridge(x, y, z, weights, penalty = NULL, scale = TRUE, ...)  # S3 method for class 'matrix' ei_ridge(x, y, z, weights, penalty = NULL, scale = TRUE, ...)  # Default S3 method ei_ridge(x, ...)"},{"path":"https://corymccartan.com/seine/reference/ei_ridge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit an ecological inference regression model — ei_ridge","text":"x Depending context: data frame predictors. matrix predictors. ei_spec object containing outcome, predictor, covariates. Predictors must proportions sum 1 across rows. can use ei_proportions() assist preparing predictor variables. Covariates ei_spec object shifted mean zero. scale=TRUE (default), also scaled unit variance. ... currently used, required extensibility. formula formula y ~ x0 + x1 | z specifying outcome y regressed predictors interest x covariates z. predictors form partition, , x0 + x1 = 1 observation. Users can include two predictors well, e.g. pct_white + pct_black + pct_hisp + pct_other. just two predictors, acceptable include one formula; formed 1 minus provided predictor. Include additional covariates separated vertical bar |. covariates strongly recommended reliable ecological inference. Covariates shifted mean zero. scale=TRUE (default), also scaled unit variance. data formula used, data data frame containing predictors outcome. weights <data-masking> vector unit weights estimation. may different total number observations aggregate unit (see total argument ei_spec()). See discussion 'Weights' choosing parameter. default, uniform weights, makes slightly stronger--necessary assumption relationship unit totals unknown data. penalty ridge penalty (non-negative scalar). Set NULL automatically determine penalty minimizes mean-square error, via efficient leave-one-cross validation procedure. ridge regression solution $$\\hat\\beta = (X^\\top X + \\lambda )^{-1}X^\\top y,$$ \\(\\lambda\\) value penalty. Keep mind choosing penalty manually covariates z scaled mean zero unit variance fitting. scale TRUE, scale covariates z unit variance. y x data frame matrix, y outcome specified : data frame numeric columns. matrix numeric vector. outcome proportion, can use ei_proportions() assist preparing . z x data frame matrix, w covariates, specified : data frame numeric columns. matrix shifted mean zero. scale=TRUE (default), also scaled unit variance.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_ridge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit an ecological inference regression model — ei_ridge","text":"ei_ridge object, supports various ridge-methods.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_ridge.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit an ecological inference regression model — ei_ridge","text":"regression calculated using singular value decomposition, allows efficient recalculation different penalty values part leave-one-cross-validation.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_ridge.html","id":"weights","dir":"Reference","previous_headings":"","what":"Weights","title":"Fit an ecological inference regression model — ei_ridge","text":"weakest identification result ecological inference makes assumption number observations per aggregate unit (totals). requires, however, weighting estimation steps according totals. may reduce efficiency totals variable slightly stronger condition holds. Specifically, totals conditionally mean-independent missing data (aggregation-unit level means outcome within predictor level), given covariates, appropriate use uniform weights estimation, fixed set weights. general, estimation efficiency improved units larger variance outcome receive less weight. Various bulit-options provided helper functions ei_wgt().","code":""},{"path":"https://corymccartan.com/seine/reference/ei_ridge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit an ecological inference regression model — ei_ridge","text":"","code":"data(elec_1968)  spec = ei_spec(elec_1968, vap_white:vap_other, pres_dem_hum:pres_abs,                total = pres_total, covariates = c(pop_urban, farm)) ei_ridge(spec) #> An ecological inference model with 4 outcomes, 3 groups, and 1143 observations #> Fit with penalty = 1.01453e-08  ei_ridge(pres_dem_hum + pres_rep_nix + pres_ind_wal + pres_abs ~       vap_white + vap_black + vap_other | pop_urban + farm, data = elec_1968) #> An ecological inference model with 4 outcomes, 3 groups, and 1143 observations #> Fit with penalty = 1.01453e-08"},{"path":"https://corymccartan.com/seine/reference/ei_riesz.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Riesz representer for ecological inference — ei_riesz","title":"Estimate Riesz representer for ecological inference — ei_riesz","text":"Fits penalized Riesz regression ecological inference, allowing overall estimates conditional means using ei_est().","code":""},{"path":"https://corymccartan.com/seine/reference/ei_riesz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Riesz representer for ecological inference — ei_riesz","text":"","code":"ei_riesz(x, ...)  # S3 method for class 'formula' ei_riesz(formula, data, total, weights, penalty, scale = TRUE, ...)  # S3 method for class 'ei_spec' ei_riesz(x, weights, penalty, scale = TRUE, ...)  # S3 method for class 'data.frame' ei_riesz(x, z, total, weights, penalty, scale = TRUE, ...)  # S3 method for class 'matrix' ei_riesz(x, z, total, weights, penalty, scale = TRUE, ...)  # Default S3 method ei_riesz(x, ...)"},{"path":"https://corymccartan.com/seine/reference/ei_riesz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Riesz representer for ecological inference — ei_riesz","text":"x Depending context: data frame predictors. matrix predictors. ei_spec object containing outcome, predictor, covariates. Predictors must proportions sum 1 across rows. can use ei_proportions() assist preparing predictor variables. Covariates ei_spec object shifted mean zero. scale=TRUE (default), also scaled unit variance. ... currently used, required extensibility. formula formula y ~ x0 + x1 | z specifying outcome y regressed predictors interest x covariates z. predictors form partition, , x0 + x1 = 1 observation. Users can include two predictors well, e.g. pct_white + pct_black + pct_hisp + pct_other. just two predictors, acceptable include one formula; formed 1 minus provided predictor. Include additional covariates separated vertical bar |. covariates strongly recommended reliable ecological inference. Covariates shifted mean zero. scale=TRUE (default), also scaled unit variance. data formula used, data data frame containing predictors outcome. total <tidy-select> variable containing total number observations aggregate unit. example, column containing total number voters. Required default. weights <data-masking> vector unit weights estimation. may different total number observations aggregate unit (see total argument ei_spec()). See discussion 'Weights' choosing parameter. default, uniform weights, makes slightly stronger--necessary assumption relationship unit totals unknown data. penalty ridge penalty (non-negative scalar), must specified. Recommended value penalty used ei_ridge(), stored penalty entry fitted model object. scale TRUE, scale covariates z unit variance. z x data frame matrix, w covariates, specified : data frame numeric columns. matrix shifted mean zero. scale=TRUE (default), also scaled unit variance.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_riesz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Riesz representer for ecological inference — ei_riesz","text":"ei_riesz object.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_riesz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Riesz representer for ecological inference — ei_riesz","text":"regression calculated using singular value decomposition.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_riesz.html","id":"weights","dir":"Reference","previous_headings":"","what":"Weights","title":"Estimate Riesz representer for ecological inference — ei_riesz","text":"weakest identification result ecological inference makes assumption number observations per aggregate unit (totals). requires, however, weighting estimation steps according totals. may reduce efficiency totals variable slightly stronger condition holds. Specifically, totals conditionally mean-independent missing data (aggregation-unit level means outcome within predictor level), given covariates, appropriate use uniform weights estimation, fixed set weights. general, estimation efficiency improved units larger variance outcome receive less weight. Various bulit-options provided helper functions ei_wgt().","code":""},{"path":"https://corymccartan.com/seine/reference/ei_riesz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Riesz representer for ecological inference — ei_riesz","text":"","code":"data(elec_1968)  # Recommended: get ridge penalty from ei_ridge() spec = ei_spec(elec_1968, vap_white:vap_other, pres_dem_hum:pres_abs,                total = pres_total, covariates = c(pop_urban, farm)) m = ei_ridge(spec)  ei_riesz(spec, penalty = m$penalty) #> A Riesz representer with 3 groups and 1143 observations #> Fit with penalty = 1.01453e-08  rr = ei_riesz(~ vap_white + vap_black + vap_other | pop_urban + farm,               data = elec_1968, total = pres_total, penalty = m$penalty) summary(rr) #> Second moment of representer: #>    vap_white    vap_black    vap_other  #>     4.461456    48.486776 31468.779992  #>  #> Second moment of representer (leave-one-out): #>   vap_white   vap_black   vap_other  #>     4.98174    51.34839 42521.67381   # Examine the weights and check they have mean 1 head(weights(rr, group = \"vap_black\")) #> [1]  3.3584139 -0.9872354  8.7084517  4.6428913 -4.6285576  6.0225661 colMeans(weights(rr)) #> vap_white vap_black vap_other  #> 1.0000000 1.0000000 0.9999999   mean(elec_1968$pres_ind_wal * weights(rr, \"vap_white\")) #> [1] 0.3633165"},{"path":"https://corymccartan.com/seine/reference/ei_sens.html","id":null,"dir":"Reference","previous_headings":"","what":"Conduct a sensitivity analysis for estimated ecological quantities — ei_sens","title":"Conduct a sensitivity analysis for estimated ecological quantities — ei_sens","text":"Relates confounding omitted variable predictor outcome bias ecological estimates, using nonparametric sensitivity analysis Chernozhukov et al. (2022).","code":""},{"path":"https://corymccartan.com/seine/reference/ei_sens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conduct a sensitivity analysis for estimated ecological quantities — ei_sens","text":"","code":"ei_sens(   est,   c_outcome = seq(0, 1, 0.01)^2,   c_predictor = seq(0, 1, 0.01)^2,   bias_bound = NULL,   confounding = 1,   expand_ci = TRUE )"},{"path":"https://corymccartan.com/seine/reference/ei_sens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conduct a sensitivity analysis for estimated ecological quantities — ei_sens","text":"est set estimates ei_est() using regression Riesz representer. c_outcome (nonparametric) partial \\(R^2\\) omitted variables outcome variables. Must 0 1. Can vector, case combinations values c_predictor used. c_predictor much variation latent variables create Riesz representer, .e. \\(1-R^2\\) true Riesz representer estimated one without omitted variable. Must 0 1. Can vector, case combinations values c_outcome used. bias_bound provided, overrides c_predictor finds values c_predictor correspond (absolute value ) provided amount bias. confounding confounding parameter (\\(\\rho\\)), must 0 1 (adversarial worst-case). expand_ci TRUE confidence intervals present est, expand width intervals direction calculated bias bound.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_sens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conduct a sensitivity analysis for estimated ecological quantities — ei_sens","text":"data frame format est, additional columns: c_outcome c_predictor, matching combinations arguments, bias_bound, containing bound amount bias. data frame additional class ei_sens, supports plot.ei_sens() method.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_sens.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conduct a sensitivity analysis for estimated ecological quantities — ei_sens","text":"parameter c_predictor equals \\(1 - R^2_{\\alpha\\sim\\alpha_s}\\), \\(\\alpha\\) true Riesz representer \\(\\alpha_s\\) Riesz representer observed covariates. RR can equivalently expressed $$   \\alpha = \\partial_{\\bar x_j} \\log f(\\bar x_j\\mid z, u), $$ \\(U\\) unobserved confounder \\(f\\) conditional density. corresponding c_predictor $$   1 - R^2_{\\alpha\\sim\\alpha_s} = 1 - \\   \\frac{\\mathbb{E}[(\\partial_{\\bar x_j} \\log f(\\bar x_j\\mid z))^2]}{   \\mathbb{E}[(\\partial_{\\bar x_j} \\log f(\\bar x_j\\mid z, u))^2]}. $$ bounds plug-estimates incorporate sampling uncertainty. , may fail cover true value finite samples, even large enough sensitivity parameters; see Section 5 Chernozhukov et al. (2022).","code":""},{"path":"https://corymccartan.com/seine/reference/ei_sens.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conduct a sensitivity analysis for estimated ecological quantities — ei_sens","text":"Chernozhukov, V., Cinelli, C., Newey, W., Sharma, ., & Syrgkanis, V. (2022). Long story short: Omitted variable bias causal machine learning (. w30302). National Bureau Economic Research.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_sens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conduct a sensitivity analysis for estimated ecological quantities — ei_sens","text":"","code":"data(elec_1968)  spec = ei_spec(elec_1968, vap_white:vap_other, pres_ind_wal,                total = pres_total, covariates = c(state, pop_urban, farm)) m = ei_ridge(spec) rr = ei_riesz(spec, penalty = m$penalty) est = ei_est(m, rr, spec)  ei_sens(est, c_outcome=0.2) #> # A tibble: 303 × 7 #>    predictor outcome      estimate std.error c_outcome c_predictor bias_bound #>    <chr>     <chr>           <dbl>     <dbl>     <dbl>       <dbl>      <dbl> #>  1 white     pres_ind_wal    0.387    0.0246       0.2      0         0       #>  2 black     pres_ind_wal    0.490    0.0505       0.2      0         0       #>  3 other     pres_ind_wal   -1.19     0.528        0.2      0         0       #>  4 white     pres_ind_wal    0.387    0.0246       0.2      0.0001    0.00111 #>  5 black     pres_ind_wal    0.490    0.0505       0.2      0.0001    0.00392 #>  6 other     pres_ind_wal   -1.19     0.528        0.2      0.0001    0.0909  #>  7 white     pres_ind_wal    0.387    0.0246       0.2      0.0004    0.00221 #>  8 black     pres_ind_wal    0.490    0.0505       0.2      0.0004    0.00784 #>  9 other     pres_ind_wal   -1.19     0.528        0.2      0.0004    0.182   #> 10 white     pres_ind_wal    0.387    0.0246       0.2      0.0009    0.00332 #> # ℹ 293 more rows  # How much variation would the regression residual need to explain of # Riesz representer to cause bias of 0.4? ei_sens(est, c_outcome=1, bias_bound=0.4) #> # A tibble: 3 × 7 #>   predictor outcome      estimate std.error c_outcome c_predictor bias_bound #>   <chr>     <chr>           <dbl>     <dbl>     <dbl>       <dbl>      <dbl> #> 1 white     pres_ind_wal    0.387    0.0246         1    0.723           0.4 #> 2 black     pres_ind_wal    0.490    0.0505         1    0.172           0.4 #> 3 other     pres_ind_wal   -1.19     0.528          1    0.000388        0.4  # Update confidence intervals and extract as matrix est = ei_est(m, rr, spec, conf_level=0.95) sens = ei_sens(est, c_outcome=0.5, c_predictor=0.2) as.matrix(sens, \"conf.high\") #>          outcome #> predictor pres_ind_wal #>     white    0.5228791 #>     black    0.8984785 #>     other    7.0309701"},{"path":"https://corymccartan.com/seine/reference/ei_sens_rv.html","id":null,"dir":"Reference","previous_headings":"","what":"Robustness values for ecological inference — ei_sens_rv","title":"Robustness values for ecological inference — ei_sens_rv","text":"robustness value minimum bound c_outcome c_predictor ei_sens() bias bound certain value. example, provided bias bound 0.5, meaning bias magnitude 0.5 considered problematic, robustness value minimum amount confounding outcome predictor (specifically, Riesz representer) lead bias magnitude 0.5.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_sens_rv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robustness values for ecological inference — ei_sens_rv","text":"","code":"ei_sens_rv(est, bias_bound, confounding = 1)"},{"path":"https://corymccartan.com/seine/reference/ei_sens_rv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robustness values for ecological inference — ei_sens_rv","text":"est set estimates ei_est() using regression Riesz representer. bias_bound <data-masking> bias bound: amount bias considered substantial. Evaluated context est, one can refer std.error estimate needed. confounding confounding parameter (\\(\\rho\\)), must 0 1 (adversarial worst-case).","code":""},{"path":"https://corymccartan.com/seine/reference/ei_sens_rv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robustness values for ecological inference — ei_sens_rv","text":"data frame format est, new rv column containing robustness values.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_sens_rv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Robustness values for ecological inference — ei_sens_rv","text":"Chernozhukov, V., Cinelli, C., Newey, W., Sharma, ., & Syrgkanis, V. (2022). Long story short: Omitted variable bias causal machine learning (. w30302). National Bureau Economic Research.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_sens_rv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robustness values for ecological inference — ei_sens_rv","text":"","code":"data(elec_1968)  spec = ei_spec(elec_1968, vap_white:vap_other, pres_ind_wal,                total = pres_total, covariates = c(state, pop_urban, farm)) m = ei_ridge(spec) rr = ei_riesz(spec, penalty = m$penalty) est = ei_est(m, rr, spec)  ei_sens_rv(est, 0.1) # how much confounding for bias of 0.1 #> # A tibble: 3 × 5 #>   predictor outcome      estimate std.error      rv #>   <chr>     <chr>           <dbl>     <dbl>   <dbl> #> 1 white     pres_ind_wal    0.387    0.0246 0.331   #> 2 black     pres_ind_wal    0.490    0.0505 0.108   #> 3 other     pres_ind_wal   -1.19     0.528  0.00491 ei_sens_rv(est, 2 * std.error) # how much confounding for bias of 2 SE #> # A tibble: 3 × 5 #>   predictor outcome      estimate std.error     rv #>   <chr>     <chr>           <dbl>     <dbl>  <dbl> #> 1 white     pres_ind_wal    0.387    0.0246 0.180  #> 2 black     pres_ind_wal    0.490    0.0505 0.109  #> 3 other     pres_ind_wal   -1.19     0.528  0.0506  # How much confounding to equalize all estimates (no polarization) y_avg = weighted.mean(elec_1968$pres_ind_wal, elec_1968$pres_total) ei_sens_rv(est, estimate - y_avg) #> # A tibble: 3 × 5 #>   predictor outcome      estimate std.error     rv #>   <chr>     <chr>           <dbl>     <dbl>  <dbl> #> 1 white     pres_ind_wal    0.387    0.0246 0.164  #> 2 black     pres_ind_wal    0.490    0.0505 0.154  #> 3 other     pres_ind_wal   -1.19     0.528  0.0725  # Extract as matrix as.matrix(ei_sens_rv(est, 0.2), \"rv\") #>          outcome #> predictor pres_ind_wal #>     white  0.545120562 #>     black  0.203654212 #>     other  0.009796171"},{"path":"https://corymccartan.com/seine/reference/ei_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify an ecological inference problem — ei_spec","title":"Specify an ecological inference problem — ei_spec","text":"Uses tidy-select syntax specify outcomes, predictors, covariates. result function can passed directly ei_ridge() ei_riesz(), plotted plot().","code":""},{"path":"https://corymccartan.com/seine/reference/ei_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify an ecological inference problem — ei_spec","text":"","code":"ei_spec(data, predictors, outcome, total, covariates = NULL, strip = TRUE)  # S3 method for class 'ei_spec' weights(object, normalize = TRUE, ...)"},{"path":"https://corymccartan.com/seine/reference/ei_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify an ecological inference problem — ei_spec","text":"data data frame. predictors <tidy-select> Predictor variables. x variable ecological regression primary interest. example, columns containing percentage racial group. outcome <tidy-select> Outcome variables. y variable ecological regression primary interest. example, columns containing percentage votes party. total <tidy-select> variable containing total number observations aggregate unit. example, column containing total number voters. Required default. covariates <tidy-select> Covariates. strip Whether strip common prefixes column names within group. example, columns named vap_white, vap_black, vap_hisp renamed white, black model output. object ei_spec object. normalize TRUE, normalize totals mean 1. ... Additional arguments (ignored).","code":""},{"path":"https://corymccartan.com/seine/reference/ei_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify an ecological inference problem — ei_spec","text":"ei_spec object, data frame additional attributes recording predictors, outcomes, total, covariates.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify an ecological inference problem — ei_spec","text":"function lightweight perform checking arguments, bounds, sum constraints, etc.  checks performed ei_ridge() ei_riesz().","code":""},{"path":"https://corymccartan.com/seine/reference/ei_spec.html","id":"methods-by-generic-","dir":"Reference","previous_headings":"","what":"Methods (by generic)","title":"Specify an ecological inference problem — ei_spec","text":"weights(ei_spec): Extract totals specification","code":""},{"path":"https://corymccartan.com/seine/reference/ei_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify an ecological inference problem — ei_spec","text":"","code":"data(elec_1968) ei_spec(elec_1968, vap_white:vap_other, pres_dem_hum:pres_abs, pres_total) #> EI Specification #> • Predictors: `white`, `black`, and `other` #> • Outcome: `dem_hum`, `rep_nix`, `ind_wal`, and `abs` #> • Covariates: none #> # A tibble: 1,143 × 7 #>   white  black    other dem_hum rep_nix ind_wal     abs #>   <dbl>  <dbl>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #> 1 0.761 0.237  0.00173   0.199   0.0773   0.711 0.0122  #> 2 0.860 0.137  0.00306   0.105   0.115    0.764 0.0161  #> 3 0.610 0.389  0.000808  0.242   0.0489   0.687 0.0218  #> 4 0.783 0.216  0.00106   0.141   0.0571   0.799 0.00290 #> 5 0.981 0.0181 0.000757  0.0375  0.222    0.727 0.0134  #> # ℹ 1,138 more rows"},{"path":"https://corymccartan.com/seine/reference/ei_synthetic.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate synthetic ecological data — ei_synthetic","title":"Generate synthetic ecological data — ei_synthetic","text":"Samples data following truncated Normal ecological model. data can generated completely random, can generated conditional provided predictors x /covariates z.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_synthetic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate synthetic ecological data — ei_synthetic","text":"","code":"ei_synthetic(   n,   p = 0,   n_x = 2,   x = n_x:1,   z = 0.25 * exp(-(seq_len(p) - 1)/2),   r2_xz = 0.5,   r2_bz = 0.5,   b_loc = NULL,   b_cov = NULL )"},{"path":"https://corymccartan.com/seine/reference/ei_synthetic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate synthetic ecological data — ei_synthetic","text":"n number rows (geographies) generate. Defaults number rows x z, matrix data frame. p number covariates. Defaults number columns z, matrix data frame, length z, vector singular values. n_x number predictor variables. Defaults number columns x, matrix data frame, length x, vector mean parameters softmax-transformed Normal distribution. x Either matrix data frame containing predictor percentages row, vector containing Dirichlet parameters use sampling predictor percentages. z matrix data frame containing geography-level covariates, vector values form Toeplitz covariance matrix random covariates. r2_xz approximate \\(R^2\\) covariates z predictors x. See model specification details. either r2_xz r2_bz zero, confounding, unadjusted Goodman regression estimate global parameters correctly. r2_bz approximate \\(R^2\\) covariates z unit-level parameters b. See model specification details. either r2_xz r2_bz zero, confounding, unadjusted Goodman regression estimate global parameters correctly. b_loc center distribution geography-level parameters. Defaults linearly spaced sequence across groups 0.5 0.9. truncation, exactly mean geography-level parameters. b_cov residual covariance matrix geography-level parameters. Defaults 0.02 * (1 + diag(n_x)).","code":""},{"path":"https://corymccartan.com/seine/reference/ei_synthetic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate synthetic ecological data — ei_synthetic","text":"ei_spec object additional attributes: b_loc b_cov Lambda coefficients z eta, linear predictor b est_true, mean geography-level parameters, formatted similarly output  ei_est() r2_xz_act r2_bz_act, containing actual (sample) \\(R^2\\) values x z, b z, respectively.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_synthetic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate synthetic ecological data — ei_synthetic","text":"function samples data following truncated Normal ecological model: $$      \\begin{pmatrix}x_i\\\\ z_i\\end{pmatrix} \\stackrel{\\text{iid}}{\\sim}          \\mathcal{N}_{[0,1]^{n_x} \\times \\mathbb{R}^p}\\left(          \\begin{pmatrix}\\mu_x\\\\ 0\\end{pmatrix},          \\begin{pmatrix}\\Sigma_x & \\Gamma \\\\ \\Gamma & T\\end{pmatrix}\\right) $$ $$      \\eta = z_i^\\top \\Lambda + \\mathtt{b_{loc}} $$ $$      b_i \\stackrel{\\text{iid}}{\\sim} \\mathcal{N}_{[0, 1]^{n_x}}(\\eta, \\mathtt{B_{cov}}) $$ $$      y_i = b_i^\\top x_i, $$ \\(\\mu_x\\) \\(\\Sigma_x\\) mean covariance Normal approximation Dirichlet distribution parameters supplied x argument , \\(\\Gamma\\), \\(T\\), \\(\\Gamma\\) matrices sampled certain properties, described . subscripts \\(\\mathcal{N}\\) indicate truncation; .e., predictors x unit-level parameters b truncated n_x-dimensional hypercube. matrix \\(T\\) symmetric Toeplitz matrix diagonals provided z argument. Generally, decreasing set nonnegative values sufficient positive definite \\(T\\). matrices \\(\\Gamma\\) \\(\\Lambda\\) initially filled independent samples standard Normal distribution. \\(\\Gamma\\) projected rows sum zero, preserving sum--1 requirement x, columns scaled produce correct \\(R^2\\) value matching r2_xz. matrix \\(\\Lambda\\) likewise scaled produce correct \\(R^2\\) value matching r2_bz. Due truncation sampling x b, -sample \\(R^2\\) values generally slightly smaller provided arguments. Aspects model can replaced data provided function. x z provided matrix data frame, value sampled marginal distribution. provided, first row model skipped.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_synthetic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate synthetic ecological data — ei_synthetic","text":"","code":"ei_synthetic(n = 10) #> EI Specification #> • Predictors: `x1` and `x2` #> • Outcome: `y` #> • Covariates: none #> # A tibble: 10 × 3 #>       y    x1     x2 #>   <dbl> <dbl>  <dbl> #> 1 0.612 0.906 0.0939 #> 2 0.590 0.677 0.323  #> 3 0.213 0.744 0.256  #> 4 0.408 0.773 0.227  #> 5 0.820 0.590 0.410  #> # ℹ 5 more rows  ei_synthetic(n = 10, p = 2, n_x = 3) #> EI Specification #> • Predictors: `x1`, `x2`, and `x3` #> • Outcome: `y` #> • Covariates: `z1` and `z2` #> # A tibble: 10 × 6 #>       y    x1     x2     x3     z1      z2 #>   <dbl> <dbl>  <dbl>  <dbl>  <dbl>   <dbl> #> 1 0.404 0.530 0.0747 0.395   0.171 -0.380  #> 2 0.149 0.481 0.479  0.0394 -0.201 -0.0864 #> 3 0.543 0.605 0.314  0.0804  0.226  0.512  #> 4 0.529 0.537 0.210  0.253   0.258  0.492  #> 5 0.678 0.592 0.0986 0.309   0.275  0.0252 #> # ℹ 5 more rows  # Manual hyperparameters: x2 dominant and z1, z2 very correlated ei_synthetic(n = 10, x = c(1, 95, 4), z = c(10, 9.999)) #> EI Specification #> • Predictors: `x1`, `x2`, and `x3` #> • Outcome: `y` #> • Covariates: `z1` and `z2` #> # A tibble: 10 × 6 #>       y      x1    x2     x3     z1     z2 #>   <dbl>   <dbl> <dbl>  <dbl>  <dbl>  <dbl> #> 1 0.441 0.00678 0.941 0.0523  0.416  0.434 #> 2 0.569 0.00899 0.969 0.0224 -3.18  -3.17  #> 3 0.627 0.0165  0.911 0.0723  0.616  0.556 #> 4 0.776 0.00835 0.954 0.0373  3.45   3.49  #> 5 0.474 0.0266  0.928 0.0453 -2.27  -2.30  #> # ℹ 5 more rows  # Condition on provided x but not z data(elec_1968) ei_synthetic(     x = cbind(elec_1968$pop_white, 1 - elec_1968$pop_white),     p = 5,     b_loc = c(0.3, 0.9),     b_cov = matrix(c(0.02, 0.016, 0.016, 0.2), nrow=2) ) #> EI Specification #> • Predictors: `x1` and `x2` #> • Outcome: `y` #> • Covariates: `z1`, `z2`, `z3`, `z4`, and `z5` #> # A tibble: 1,143 × 8 #>       y    x1     x2      z1     z2      z3     z4     z5 #>   <dbl> <dbl>  <dbl>   <dbl>  <dbl>   <dbl>  <dbl>  <dbl> #> 1 0.279 0.716 0.284  -0.0259 -0.188 -0.0688 -0.112  0.269 #> 2 0.571 0.819 0.181  -0.692  -0.419 -0.832  -0.520 -1.15  #> 3 0.677 0.538 0.462  -0.256   0.195  0.341  -0.193 -0.746 #> 4 0.353 0.721 0.279  -0.0536 -0.382 -0.223  -0.114  0.298 #> 5 0.562 0.976 0.0241 -0.356   0.280  0.425  -0.447 -0.378 #> # ℹ 1,138 more rows"},{"path":"https://corymccartan.com/seine/reference/ei_wgt.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation weighting models — ei_wgt","title":"Estimation weighting models — ei_wgt","text":"Several built-helper functions generate estimation weights vector unit totals, existing ei_spec() object.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_wgt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation weighting models — ei_wgt","text":"","code":"ei_wgt_unif(x)  ei_wgt_prop(x)  ei_wgt_sqrt(x)"},{"path":"https://corymccartan.com/seine/reference/ei_wgt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation weighting models — ei_wgt","text":"x numeric vector unit totals, existing ei_spec() object.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_wgt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation weighting models — ei_wgt","text":"numeric vector estimation weights number observations x. mean 1.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_wgt.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Estimation weighting models — ei_wgt","text":"ei_wgt_unif(): Uniform weights across units population. Appropriate unit-level variance constant, .e., homosekdastic. ei_wgt_prop(): Weights proportional totals. Appropriate unit-level variance inversely proportional number observations. ei_wgt_sqrt(): Weights proportional square root totals. Appropriate unit-level variance inversely proportional square root number observations.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_wgt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation weighting models — ei_wgt","text":"","code":"data(elec_1968)  ei_wgt_unif(head(elec_1968$pres_total)) #> [1] 1 1 1 1 1 1  spec = ei_spec(head(elec_1968), predictors = vap_white:vap_other,                outcome = pres_ind_wal, total = pres_total) ei_wgt_prop(spec) #> [1] 0.8851989 2.1516032 0.9151221 0.5219934 1.0283945 0.4976879 ei_wgt_sqrt(spec) #> [1] 0.9722265 1.5157519 0.9885225 0.7465854 1.0479170 0.7289967"},{"path":"https://corymccartan.com/seine/reference/ei_wrap_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap another predictive model for use in ei_est — ei_wrap_model","title":"Wrap another predictive model for use in ei_est — ei_wrap_model","text":"Stores additional data attributes generic model class can used regr argument ei_est(). Given wide variety model classes, guarantee function work. However, model classes supporting fitted() predict() method work long transformation predictor variables part model formula fitting.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_wrap_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap another predictive model for use in ei_est — ei_wrap_model","text":"","code":"ei_wrap_model(x, data, predictors = NULL, outcome = NULL, ...)"},{"path":"https://corymccartan.com/seine/reference/ei_wrap_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap another predictive model for use in ei_est — ei_wrap_model","text":"x model object, supporting fitted() predict() generics. data data frame matrix containing data used fit model, ei_spec() object (recommended). latter, predictors outcome arguments ignored need provided. predictors <tidy-select> Predictor variables. x variable ecological regression primary interest. example, columns containing percentage racial group. outcome <tidy-select> Outcome variables. y variable ecological regression primary interest. example, columns containing percentage votes party. ... Additional arguments passed predict() method.","code":""},{"path":"https://corymccartan.com/seine/reference/ei_wrap_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap another predictive model for use in ei_est — ei_wrap_model","text":"ei_wrapped object, information required use provided x ei_est().","code":""},{"path":"https://corymccartan.com/seine/reference/ei_wrap_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap another predictive model for use in ei_est — ei_wrap_model","text":"","code":"data(elec_1968)  spec = ei_spec(elec_1968, vap_white:vap_other, pres_ind_wal, pres_total,                covariates = c(pop_urban, farm))  # Note: this is not a model recommended for valid ecological inference! m = suppressWarnings(     glm(pres_ind_wal ~ 0 + white + black + other + pop_urban + farm,         data = spec, family = \"binomial\") ) m_wrap = ei_wrap_model(m, spec, type = \"response\") print(m_wrap) #> A wrapped <glm/lm> model with 1143 observations  ei_est(m_wrap, data = spec) # notice all estimates nonnegative #> # A tibble: 3 × 4 #>   predictor outcome        estimate std.error #>   <chr>     <chr>             <dbl>     <dbl> #> 1 white     pres_ind_wal 0.339        0.0239  #> 2 black     pres_ind_wal 0.741        0.0565  #> 3 other     pres_ind_wal 0.00000298   0.00539"},{"path":"https://corymccartan.com/seine/reference/elec_1968.html","id":null,"dir":"Reference","previous_headings":"","what":"1968 U.S. presidential election data — elec_1968","title":"1968 U.S. presidential election data — elec_1968","text":"County-level dataset containing election results demographics 1968 U.S. presidential election states Virginia, North Carolina, South Carolina, Georgia, Florida, Alabama, Mississippi, Louisiana, Arkansas, Tennessee, Texas.","code":""},{"path":"https://corymccartan.com/seine/reference/elec_1968.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"1968 U.S. presidential election data — elec_1968","text":"","code":"elec_1968"},{"path":"https://corymccartan.com/seine/reference/elec_1968.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"1968 U.S. presidential election data — elec_1968","text":"data frame 1,143 rows 41 variables: fips County FIPS code state State name abbr State abbreviation region Census region division Census division county County name pop Total population 1970 census pop_city, pop_urban, pop_rural Proportion population city, urban rural areas pop_white, pop_black, pop_aian, pop_asian, pop_hisp Proportion population racial group. first four columns sum 1, pop_hisp considered separately. vap Voting-age population 1970 census vap_white, vap_black, vap_other Proportion voting-age population racial group farm, nonfarm Proportion population farm non-farm households educ_elem, educ_hsch, educ_coll Proportion population elementary, high school, college education cvap Citizen voting-age population 1970 census cvap_white, cvap_black, cvap_other Proportion citizen voting-age population racial group inc_00_03k, inc_03_08k, inc_08_25k, inc_25_99k Proportion population households income bracket. Median household income 1970 $9,870 pres_dem_hum, pres_rep_nix, pres_ind_wal, pres_abs, pres_oth Proportion votes Humphrey, Nixon, Wallace, candidates. pres_abs calculated one minus Humphrey, Nixon, Wallace vote shares. pres_total Total number votes cast president. pres_turn Proportion voting-age population turned vote. pres_turn_icpsr Proportion voting-age population turned vote using ICPSR data denominator. adj FIPS-indexed adjacency list capturing geographic (rook) adjacency counties. convert 1-indexed adjacency list, run lapply(elec_1968$adj, function(x) match(x, elec_1968$fips)).","code":""},{"path":"https://corymccartan.com/seine/reference/elec_1968.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"1968 U.S. presidential election data — elec_1968","text":"Census data: Steven Manson, Jonathan Schroeder, David Van Riper, Katherine Knowles, Tracy Kugler, Finn Roberts, Steven Ruggles. IPUMS National Historical Geographic Information System: Version 19.0. 1970 Decennial Census. Minneapolis, MN: IPUMS. 2024. doi:10.18128/D050.V19.0 Presidential election data: Clubb, Jerome M., Flanigan, William H., Zingale, Nancy H. Electoral Data Counties United States: Presidential Congressional Races, 1840-1972. Inter-university Consortium Political Social Research (distributor), 2006-11-13. doi:10.3886/ICPSR08611.v1","code":""},{"path":"https://corymccartan.com/seine/reference/plot.ei_sens.html","id":null,"dir":"Reference","previous_headings":"","what":"Bias contour plot for ecological inference estimates — plot.ei_sens","title":"Bias contour plot for ecological inference estimates — plot.ei_sens","text":"Displays bias bound function c_outcome c_predictor ei_sens() contour plot. Bounds outcome, standard errors point estimate, can overlaid contours plot aid interpretation. Benchmarked values c_outcome c_predictor based observed covariates can also overlaid.","code":""},{"path":"https://corymccartan.com/seine/reference/plot.ei_sens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bias contour plot for ecological inference estimates — plot.ei_sens","text":"","code":"# S3 method for class 'ei_sens' plot(   x,   y = NULL,   predictor = NULL,   bounds = NULL,   bench = NULL,   plot_se = 1:3,   contour_exp = -2:-1,   ...,   lwd = 1,   pch = 8,   cex = 1 )"},{"path":"https://corymccartan.com/seine/reference/plot.ei_sens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bias contour plot for ecological inference estimates — plot.ei_sens","text":"x ei_sens object y outcome variable, character vector. Defaults first. predictor predictor variable plot, character vector. Defaults first. bounds vector c(min, max) bounds outcome, affect contours plotted. general, truncation lead violations accounting identity. bounds = NULL (default), inferred outcome variable: contained within \\([0, 1]\\), instance, bounds c(0, 1). Setting bounds = FALSE forces unbounded estimates. bench data frame benchmark values, ei_bench(), plot. plot_se vector multiples standard error plot contours. contour_exp Powers 10 plot contours bias bound. ... Additional arguments passed contour() lwd Scaling factor contour line widths pch point type (see points()) benchmark values, provided cex Scaling factor benchmark points labels, provided","code":""},{"path":"https://corymccartan.com/seine/reference/plot.ei_sens.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bias contour plot for ecological inference estimates — plot.ei_sens","text":"Chernozhukov, V., Cinelli, C., Newey, W., Sharma, ., & Syrgkanis, V. (2022). Long story short: Omitted variable bias causal machine learning (. w30302). National Bureau Economic Research.","code":""},{"path":"https://corymccartan.com/seine/reference/plot.ei_sens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bias contour plot for ecological inference estimates — plot.ei_sens","text":"","code":"data(elec_1968)  spec = ei_spec(elec_1968, vap_white:vap_other, pres_ind_wal,                total = pres_total, covariates = c(state, pop_urban, farm)) m = ei_ridge(spec) rr = ei_riesz(spec, penalty = m$penalty) est = ei_est(m, rr, spec) sens = ei_sens(est)  plot(sens)   plot(sens, bench = ei_bench(spec), plot_se=NULL)"},{"path":"https://corymccartan.com/seine/reference/plot.ei_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an EI specification — plot.ei_spec","title":"Plot an EI specification — plot.ei_spec","text":"Useful quickly visualizing scatterplots outcome versus predictor variables.","code":""},{"path":"https://corymccartan.com/seine/reference/plot.ei_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an EI specification — plot.ei_spec","text":"","code":"# S3 method for class 'ei_spec' plot(x, ..., pch = 16, cex = 0.2)"},{"path":"https://corymccartan.com/seine/reference/plot.ei_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an EI specification — plot.ei_spec","text":"x ei_spec object. ... Additional arguments passed pairs(). pch, cex plot()","code":""},{"path":"https://corymccartan.com/seine/reference/plot.ei_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an EI specification — plot.ei_spec","text":"","code":"data(elec_1968) spec = ei_spec(elec_1968, vap_white:vap_other, pres_dem_hum:pres_abs, pres_total) plot(spec)"},{"path":"https://corymccartan.com/seine/reference/ridge-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for ei_ridge models — ridge-methods","title":"Methods for ei_ridge models — ridge-methods","text":"Models fitted ei_ridge() support various generic methods.","code":""},{"path":"https://corymccartan.com/seine/reference/ridge-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for ei_ridge models — ridge-methods","text":"","code":"# S3 method for class 'ei_ridge' predict(object, new_data, type = \"numeric\", ...)  # S3 method for class 'ei_ridge' fitted(object, ...)  # S3 method for class 'ei_ridge' residuals(object, ...)  # S3 method for class 'ei_ridge' summary(object, ...)  # S3 method for class 'ei_ridge' weights(object, normalize = TRUE, ...)"},{"path":"https://corymccartan.com/seine/reference/ridge-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for ei_ridge models — ridge-methods","text":"object fitted ei_ridge model new_data data frame, matrix, ei_spec new predictors. type type predictions generate; \"numeric\" supported. ... Additional arguments (ignored) normalize TRUE, normalize weights mean 1.","code":""},{"path":"https://corymccartan.com/seine/reference/ridge-methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Methods for ei_ridge models — ridge-methods","text":"predict(ei_ridge): Predict ei_ridge model. fitted(ei_ridge): Extract fitted values. residuals(ei_ridge): Extract residuals. summary(ei_ridge): Summarize model's fitted values \\(R^2\\). weights(ei_ridge): Extract estimation weights fitted model.","code":""},{"path":"https://corymccartan.com/seine/reference/seine-package.html","id":null,"dir":"Reference","previous_headings":"","what":"seine: Semiparametric Ecological Inference — seine-package","title":"seine: Semiparametric Ecological Inference — seine-package","text":"Efficient user-friendly routines modern ecological inference. Implements methods described McCartan & Kuriwaki (2025) arXiv:2507.XXXXX, generalize ecological regression introduced Goodman (1953) doi:10.2307/2088121 . Includes routines preprocessing, synthetic data generation, double/debiased machine learning (DML) estimation, sensitivity analysis.","code":""},{"path":[]},{"path":"https://corymccartan.com/seine/reference/seine-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"seine: Semiparametric Ecological Inference — seine-package","text":"Maintainer: Cory McCartan mccartan@psu.edu (ORCID) Authors: Shiro Kuriwaki shiro.kuriwaki@yale.edu (ORCID)","code":""},{"path":"https://corymccartan.com/seine/reference/weights.ei_riesz.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Riesz representer weights — weights.ei_riesz","title":"Extract Riesz representer weights — weights.ei_riesz","text":"Extracts single set Riesz representer weights ei_riesz object, selected group.","code":""},{"path":"https://corymccartan.com/seine/reference/weights.ei_riesz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Riesz representer weights — weights.ei_riesz","text":"","code":"# S3 method for class 'ei_riesz' weights(object, group = TRUE, loo = FALSE, ...)"},{"path":"https://corymccartan.com/seine/reference/weights.ei_riesz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Riesz representer weights — weights.ei_riesz","text":"object ei_riesz() object. group group extract weights, numeric index character column name. special (default) value TRUE return matrix weights, column corresponding group. loo TRUE, return leave-one-weights ... Additional arguments (ignored)","code":""},{"path":"https://corymccartan.com/seine/reference/weights.ei_riesz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Riesz representer weights — weights.ei_riesz","text":"numeric vector weights","code":""},{"path":"https://corymccartan.com/seine/news/index.html","id":"seine-010","dir":"Changelog","previous_headings":"","what":"seine 0.1.0","title":"seine 0.1.0","text":"Double/debiased ML ecological inference Preprocessing helper functions Synthetic EI data","code":""}]
